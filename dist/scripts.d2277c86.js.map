{"version":3,"sources":["scripts/inview.js","scripts/index.js"],"names":["observerOptions","root","rootMargin","threshold","inView","element","addClass","allDomItems","observer","IntersectionObserver","forEach","dom_item","intersectionRatio","target","classList","add","document","querySelectorAll","item","observe","$el","push","console","log","nodes","nodesitem"],"mappings":";AAMA,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,EANA,IAAMA,EAAkB,CACvBC,KAAM,KACNC,WAAY,MACZC,UAAW,IAGNC,EAAS,SAAyB,GAAvBC,IAAAA,EAAAA,EAAAA,QAASC,EAAAA,EAAAA,SACrBC,EAAc,GAEdC,EAAW,IAAIC,qBAAqB,SAACJ,GACzCA,EAAQK,QAAQ,SAACC,GACXA,EAASC,kBAAoB,GAChCD,EAASE,OAAOC,UAAUC,IAAOT,GAAAA,OAAAA,OAGjCN,GAGkB,UAAlB,EAAOK,GACMW,SAASC,iBAAqBZ,IAAAA,OAAAA,IACpCK,QAAQ,SAACQ,GACjBV,EAASW,QAAQD,MAGlBb,EAAQK,QAAQ,SAACU,GAChBb,EAAYc,KAAKL,SAASC,iBAAqBG,IAAAA,OAAAA,OAGhDE,QAAQC,IAAIhB,GACZA,EAAYG,QAAQ,SAACc,GACpBA,EAAMd,QAAQ,SAACe,GACdH,QAAQC,IAAIE,GACZjB,EAASW,QAAQM,SA1BrB,QAAA,OAAA;;ACIA,aAVA,IAAA,EAAA,QAAA,aAUA,EAAO,EAAA,QAAA,CACNpB,QAAS,CAAC,eAAgB,cAAe,aACzCC,SAAU","file":"scripts.d2277c86.js","sourceRoot":"..","sourcesContent":["const observerOptions = {\n\troot: null,\n\trootMargin: \"0px\",\n\tthreshold: 0.5,\n};\n\nconst inView = ({element, addClass}) => {\n\tlet allDomItems = [];\n\t\n\tlet observer = new IntersectionObserver((element) => {\n\telement.forEach((dom_item) => {\n\t\t\tif (dom_item.intersectionRatio > 0) {\n\t\t\t\tdom_item.target.classList.add(`${addClass}`);\n\t\t\t}\n\t\t});\n\t}, observerOptions);\n\t\n\n\tif(typeof element != 'object') {\n\t\tlet dom_item = document.querySelectorAll(`.${element}`);\n\t\tdom_item.forEach((item) => {\n\t\t\tobserver.observe(item);\n\t\t});\n\t} else {\n\t\telement.forEach(($el) => {\n\t\t\tallDomItems.push(document.querySelectorAll(`.${$el}`))\n\t\t})\n\t\t\n\t\tconsole.log(allDomItems)\n\t\tallDomItems.forEach((nodes) => {\n\t\t\tnodes.forEach((nodesitem) => {\n\t\t\t\tconsole.log(nodesitem)\n\t\t\t\tobserver.observe(nodesitem);\n\t\t\t})\n\t\t})\n\t}\n\t\n\t\n\n}\n\nexport { inView };","import { inView } from './inview';\n\n\n\n/*\n --- element {array || string} ----\n// target element you want to check for\n --- addClass ---\n// class that gets added when element is in view\n*/\ninView({\n\telement: ['facts__image', 'facts__copy', 'facts__hr'],\n\taddClass: 'in-view'\n})"]}