{"version":3,"sources":["scripts/inview.js","scripts/index.js"],"names":["observerOptions","root","rootMargin","threshold","inView","element","addClass","allDomItems","observer","IntersectionObserver","forEach","dom_item","intersectionRatio","target","classList","add","document","querySelectorAll","item","observe","$el","push","nodes","nodesitem"],"mappings":";;ACAA;;AAIA;;;;;ADJA,IAAMA,eAAe,GAAG;ACUxB,ADTCC,EAAAA,IAAI,EAAE,IADiB,QCUjB;AACNI,ADTAH,ECSAG,ADTAH,OCSO,EAAE,CDTC,EAAE,KAFW,CCUjB;AAENI,ADTAH,ECSAG,ADTAH,QCSQ,CDTC,CCSC,CDTC;ACOL,ADViB,CCUxB,ADVA;;AAMA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAyB;AAAA,MAAvBC,OAAuB,QAAvBA,OAAuB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AACvC,MAAIC,WAAW,GAAG,EAAlB;AAEA,MAAIC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,UAACJ,OAAD,EAAa;AACrDA,IAAAA,OAAO,CAACK,OAAR,CAAgB,UAACC,QAAD,EAAc;AAC5B,UAAIA,QAAQ,CAACC,iBAAT,GAA6B,CAAjC,EAAoC;AACnCD,QAAAA,QAAQ,CAACE,MAAT,CAAgBC,SAAhB,CAA0BC,GAA1B,WAAiCT,QAAjC;AACA;AACD,KAJF;AAKC,GANc,EAMZN,eANY,CAAf;;AAQA,MAAG,QAAOK,OAAP,KAAkB,QAArB,EAA+B;AAC9B,QAAIM,QAAQ,GAAGK,QAAQ,CAACC,gBAAT,YAA8BZ,OAA9B,EAAf;AACAM,IAAAA,QAAQ,CAACD,OAAT,CAAiB,UAACQ,IAAD,EAAU;AAC1BV,MAAAA,QAAQ,CAACW,OAAT,CAAiBD,IAAjB;AACA,KAFD;AAGA,GALD,MAKO;AACNb,IAAAA,OAAO,CAACK,OAAR,CAAgB,UAACU,GAAD,EAAS;AACxBb,MAAAA,WAAW,CAACc,IAAZ,CAAiBL,QAAQ,CAACC,gBAAT,YAA8BG,GAA9B,EAAjB;AACA,KAFD;AAGAb,IAAAA,WAAW,CAACG,OAAZ,CAAoB,UAACY,KAAD,EAAW;AAC9BA,MAAAA,KAAK,CAACZ,OAAN,CAAc,UAACa,SAAD,EAAe;AAC5Bf,QAAAA,QAAQ,CAACW,OAAT,CAAiBI,SAAjB;AACA,OAFD;AAGA,KAJD;AAKA;AACD,CA1BD","file":"scripts.bcf3243b.js","sourceRoot":"..","sourcesContent":["const observerOptions = {\n\troot: null,\n\trootMargin: \"0px\",\n\tthreshold: 0.5,\n};\n\nconst inView = ({element, addClass}) => {\n\tlet allDomItems = [];\n\t\n\tlet observer = new IntersectionObserver((element) => {\n\telement.forEach((dom_item) => {\n\t\t\tif (dom_item.intersectionRatio > 0) {\n\t\t\t\tdom_item.target.classList.add(`${addClass}`);\n\t\t\t}\n\t\t});\n\t}, observerOptions);\n\t\n\tif(typeof element != 'object') {\n\t\tlet dom_item = document.querySelectorAll(`.${element}`);\n\t\tdom_item.forEach((item) => {\n\t\t\tobserver.observe(item);\n\t\t});\n\t} else {\n\t\telement.forEach(($el) => {\n\t\t\tallDomItems.push(document.querySelectorAll(`.${$el}`))\n\t\t})\n\t\tallDomItems.forEach((nodes) => {\n\t\t\tnodes.forEach((nodesitem) => {\n\t\t\t\tobserver.observe(nodesitem);\n\t\t\t})\n\t\t})\n\t}\n}\n\nexport { inView };","import { inView } from './inview';\n\n\n\n/*\n --- element {array || string} ----\n// target element you want to check for\n --- addClass ---\n// class that gets added when element is in view\n*/\ninView({\n\telement: 'animate',\n\taddClass: 'in-view'\n})"]}